[["index.html", "Exploratory Data Analysis in the 21st Century Chapter 1 Preface", " Exploratory Data Analysis in the 21st Century Di Cook and Emi Tanaka 2021-06-14 Chapter 1 Preface Exploratory data analysis is about “playing in the sand with your data” to allow you to find the unexpected or at least get an understanding about the data that you have in hand. You can think about it as like travelling to a new place. You might have a purpose for visiting, perhaps to attend a conference, or family and friends. Some of your movements will be pre-determined, or guided by the advice of others, but hopefully you will spend some of the time you wandering around without guidance, perhaps even aimlessly. It is in these times you might find something special, a cafe in a garden with great carrot cake, a cuddling pair of rainbow lorikeets, a little library full of Jane Austen books, or even a cheap gas station. Walking around without an agenda helps you get to know the new neighbourhood. The first book on exploratory data analysis was published by Tukey (1977). It has been the gold standard for learning about data analysis for many decades, although it has been quickly dated because all the techniques described can be accomplished with pencil and paper. Today, exploratory data analysis has come of age, and is a fundamental part of data science. Most of what we do in data analysis is conducted using the computer, not pencil and paper. Data sets are often quite large, too. There are many books, and courses on exploratory data analysis. Virtually all of these are missing key ingredients of Tukey’s spirit. Exploratory data analysis has become synonymous with descriptive statistics, and this is sad. The exploratory part of exploratory data analysis has been subsumed by humdrum data summary. The purpose in writing this book is to communicate the enjoyment of working with data, to reclaim the original intent, to “forces us to notice what we never expected to see” (Tukey 1977), with modern computational techniques. Talk about teaching All of the examples in this book are produced using the open source software R. If you are new to R, a good place to start before reading this book is Wickham and Grolemund (2017). Do they need to know some statistics? About the exercises. This work is licensed under a Creative Commons Attribution 4.0 International License. References "],["what-is-eda.html", "Chapter 2 What is exploratory data analysis?", " Chapter 2 What is exploratory data analysis? Data analysis is a process of cleaning, transforming, inspecting and modelling data with the aim of extracting information. Data analysis includes: exploratory data analysis, confirmatory data analysis, and initial data analysis. In a confirmatory data analysis, the focus is on statistical inference and includes processes such as testing hypothesis, model selection, or predictive modelling. "],["initial-data-analysis.html", "Chapter 3 Initial Data Analysis 3.1 Data description 3.2 Model formulation", " Chapter 3 Initial Data Analysis In Chapter 2, we mentioned that data analysis includes initial data analysis (IDA). There are various definitions of IDA, much like there are numerous definitions for EDA. Some people would be practising IDA without explicitly realising that it is IDA. Or in other cases, a different name is used to describe the same process, such as Chatfield (1985) referring to IDA also as “initial examination of data” and Cox &amp; Snell (1981) as “preliminary data anlysis” and Rao (1983) as “cross-examination of data.” So what is IDA? The two main objectives for initial data analysis are: data description, and model formulation. IDA differs from the main analysis (i.e. usually fitting the model, conducting significance tests, making inferences or predictions). IDA is often unreported in the data analysis reports or scientific papers due to it being “uninteresting” or “obvious.” The role of the main analysis is to answer the intended question(s) that the data were collected for. Sometimes IDA alone is sufficient. 3.1 Data description Data description should be one of the first steps in the data analysis to assess the structure and quality of the data. We refer them to occasionally as data sniffing or data scrutinizing. These include using common or domain knowledge to check if the recorded data have sensible values. E.g. Are positive values, e.g. height and weight, recorded as positive values with a plausible range? If the data are counts, are the recorded values contain noninteger values? For compositional data, do the values add up to 100% (or 1)? If not is that a measurement error or due to rounding? Or is another variable missing? In addition, numerical or graphical summaries may reveal that there is unwanted structure in the data. E.g., Does the treatment group have different demographic characteristics to the control group? Does the distribution of the data imply violations of assumptions for the main analysis? Data sniffing or data scrutinizing is a process that you get better at with practice and have familiarity with the domain area. Aside from checking the data structure or data quality, it’s important to check how the data are understood by the computer, i.e. checking for data type is also important. E.g., Was the date read in as character? Was a factor read in as numeric? 3.1.1 Checking the data type Example 1: Consider the following data stored as an excel sheet. We read this data into R as below. library(readxl) df &lt;- read_excel(&quot;data/example-data-type.xlsx&quot;) Below is a print out of the data object. Are there any issues here? df ## # A tibble: 5 x 4 ## id date loc temp ## &lt;dbl&gt; &lt;dttm&gt; &lt;chr&gt; &lt;dbl&gt; ## 1 1 2010-01-03 00:00:00 New York 42 ## 2 2 2010-02-03 00:00:00 New York 41.4 ## 3 3 2010-03-03 00:00:00 New York 38.5 ## 4 4 2010-04-03 00:00:00 New York 41.1 ## 5 5 2010-05-03 00:00:00 New York 39.8 In the United States, it is common to use the date format MM/DD/YYYY while the rest of the world commonly use DD/MM/YYYY or YYYY/MM/DD. It is highly probable that the dates are 1st-5th March and not 3rd of Jan-May. You can validate data with external sources, e.g. say the temperature at New York during the two choices suggest that the dates are 1st-5th March. The benefit of working with data grounded in the real world process is that there are generally means to sanity check. You can robustify your workflow by ensuring that you have an explicit check for the expected data type (and values) in your code. In the code below, we write our expected types and further coerce some data types to what we want. library(tidyverse) ## Warning: package &#39;tidyverse&#39; was built under R version 4.0.2 ## ── Attaching packages ─────────────────────────────────────── tidyverse 1.3.1 ── ## ✓ ggplot2 3.3.3 ✓ purrr 0.3.4 ## ✓ tibble 3.1.1 ✓ dplyr 1.0.6 ## ✓ tidyr 1.1.3 ✓ stringr 1.4.0 ## ✓ readr 1.4.0 ✓ forcats 0.5.1 ## Warning: package &#39;tibble&#39; was built under R version 4.0.2 ## Warning: package &#39;tidyr&#39; was built under R version 4.0.2 ## Warning: package &#39;readr&#39; was built under R version 4.0.2 ## Warning: package &#39;dplyr&#39; was built under R version 4.0.2 ## Warning: package &#39;forcats&#39; was built under R version 4.0.2 ## ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ── ## x dplyr::filter() masks stats::filter() ## x dplyr::lag() masks stats::lag() read_excel(&quot;data/example-data-type.xlsx&quot;, col_types = c(&quot;text&quot;, &quot;date&quot;, &quot;text&quot;, &quot;numeric&quot;)) %&gt;% mutate(id = as.factor(id), date = as.character(date), date = as.Date(date, format = &quot;%Y-%d-%m&quot;)) ## # A tibble: 5 x 4 ## id date loc temp ## &lt;fct&gt; &lt;date&gt; &lt;chr&gt; &lt;dbl&gt; ## 1 1 2010-03-01 New York 42 ## 2 2 2010-03-02 New York 41.4 ## 3 3 2010-03-03 New York 38.5 ## 4 4 2010-03-04 New York 41.1 ## 5 5 2010-03-05 New York 39.8 read_csv(&quot;data/example-data-type.csv&quot;, col_types = cols(id = col_factor(), date = col_date(format = &quot;%m/%d/%y&quot;), loc = col_character(), temp = col_double())) ## # A tibble: 5 x 4 ## id date loc temp ## &lt;fct&gt; &lt;date&gt; &lt;chr&gt; &lt;dbl&gt; ## 1 1 2010-03-01 New York 42 ## 2 2 2010-03-02 New York 41.4 ## 3 3 2010-03-03 New York 38.5 ## 4 4 2010-03-04 New York 41.1 ## 5 5 2010-03-05 New York 39.8 The checks (or coercions) ensure that even if the data are updated, you can have some confidence that any data type error will be picked up before further analysis. 3.1.2 Checking the data quality Numerical or graphical summaries, or even just eye-balling the data, helps to uncover some data quality issues. Do you see any issues for the data below? df2 &lt;- read_csv(&quot;data/example-data-quality.csv&quot;, col_types = cols(id = col_factor(), date = col_date(format = &quot;%m/%d/%y&quot;), loc = col_character(), temp = col_double())) df2 ## # A tibble: 9 x 4 ## id date loc temp ## &lt;fct&gt; &lt;date&gt; &lt;chr&gt; &lt;dbl&gt; ## 1 1 2010-03-01 New York 42 ## 2 2 2010-03-02 New York 41.4 ## 3 3 2010-03-03 New York 38.5 ## 4 4 2010-03-04 New York 41.1 ## 5 5 2010-03-05 New York 39.8 ## 6 6 2020-03-01 Melbourne 30.6 ## 7 7 2020-03-02 Melbourne 17.9 ## 8 8 2020-03-03 Melbourne 18.6 ## 9 9 2020-03-04 &lt;NA&gt; 21.3 There is a missing value in loc. Temperature is in Farenheit for New York but Celsius in Melbourne. You can find this out again using external sources. Consider the soybean study conducted in Brazil (cite Lehner 2016). This study collected multiple traits of soybeans grown at multiple locations over years. library(naniar) data(&quot;lehner.soybeanmold&quot;, package = &quot;agridat&quot;) vis_miss(lehner.soybeanmold) Inspecting the data reveals that there are a number of missing values for sclerotia and these values do not necessary appear missing at random. We could check if observational units that are missing values for sclerotia, have different yield say. ggplot(lehner.soybeanmold, aes(sclerotia, yield)) + geom_miss_point() We could also compare the new data with old data. library(inspectdf) ## Warning: package &#39;inspectdf&#39; was built under R version 4.0.2 soy_old &lt;- lehner.soybeanmold %&gt;% filter(year %in% 2010:2011) soy_new &lt;- lehner.soybeanmold %&gt;% filter(year == 2012) inspect_cor(soy_old, soy_new) %&gt;% show_plot() ## Warning: Columns with 0 variance found: year 3.1.3 Check on data collection method Next we study the data from ABS that shows the total number of people employed in a given month from February 1976 to December 2019 using the original time series. library(readabs) ## Warning: package &#39;readabs&#39; was built under R version 4.0.2 employed &lt;- read_abs(series_id = &quot;A84423085A&quot;) %&gt;% mutate(month = lubridate::month(date), year = factor(lubridate::year(date))) %&gt;% filter(year != &quot;2020&quot;) %&gt;% select(date, month, year, value) Do you notice anything? employed %&gt;% ggplot(aes(month, value, color = year)) + geom_line() + ggtitle(&quot;1978 Feb - 2019 Dec&quot;) Why do you think the number of people employed is going up each year? There’s a suspicious change in August numbers from 2014. A potential explanation for this is that there was a change in the survey from 2014. Also see https://robjhyndman.com/hyndsight/abs-seasonal-adjustment-2/ Check if the data collection method has been consistent. 3.1.4 Check for experimental data For experimental data, there would generally be some descriptions that include the experimental layout and any randomisation process of controlled variables (e.g. treatments) to units. Consider the experiment below. The experiment tests the effects of 9 fertilizer treatments on the yield of brussel sprouts on a field laid out in a rectangular array of 6 rows and 8 columns. df3 &lt;- read_csv(&quot;data/example-experimental-data.csv&quot;, col_types = cols(row = col_factor(), col = col_factor(), yield = col_double(), trt = col_factor(), block = col_factor())) ## Warning: package &#39;colorspace&#39; was built under R version 4.0.2 df3 %&gt;% mutate(trt = fct_reorder(trt, yield)) %&gt;% ggplot(aes(trt, yield)) + geom_point(size = 4, alpha = 1 / 2) + guides(x = guide_axis(n.dodge = 2)) High sulphur and high manure seems to best for the yield of brussel sprouts. Any issues here? 3.2 Model formulation Note: there are variety of ways to do IDA and you don’t need to prescribe to what we show you. References "],["working-with-a-single-variable.html", "Chapter 4 Working with a single variable", " Chapter 4 Working with a single variable making transformations, detecting outliers, using robust statistics "],["bivariate-dependencies-and-relationships.html", "Chapter 5 Bivariate dependencies and relationships", " Chapter 5 Bivariate dependencies and relationships transformations to linearise "],["going-beyond-two-variables.html", "Chapter 6 Going beyond two variables", " Chapter 6 Going beyond two variables exploring high dimensions "],["making-comparisons-between-groups-and-strata.html", "Chapter 7 Making comparisons between groups and strata", " Chapter 7 Making comparisons between groups and strata "],["sculpting-data-using-models.html", "Chapter 8 Sculpting data using models", " Chapter 8 Sculpting data using models checking assumptions, co-dependency and performing diagnostics "],["exploring-data-having-a-space-and-time-context.html", "Chapter 9 Exploring data having a space and time context", " Chapter 9 Exploring data having a space and time context "],["is-what-you-see-really-there.html", "Chapter 10 Is what you see really there?", " Chapter 10 Is what you see really there? Using computational tools to determine whether what is seen in the data can be assumed to apply more broadly "],["final-words.html", "Chapter 11 Final words", " Chapter 11 Final words "],["references.html", "References", " References "]]
