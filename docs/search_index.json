[["working-with-a-single-variable.html", "Chapter 4 Working with a single variable 4.1 Possible features of continuous variables 4.2 Numerical features of a single contiuous variables 4.3 Outliers 4.4 Closer look at the boxplot 4.5 Robust statistics: measure of central tendency 4.6 Robust statistics: measure of dispersion 4.7 Transformations", " Chapter 4 Working with a single variable making transformations, detecting outliers, using robust statistics 4.1 Possible features of continuous variables ## Warning: Ignoring unknown parameters: binwidth ## `stat_bindot()` using `bins = 30`. Pick better value with `binwidth`. Feature Example Description Asymmetry The distribution is not symmetrical. Outliers Some observations are that are far from the rest. Multimodality There are more than one “peak” in the observations. Gaps Some continuous interval that are contained within the range but no observations exists. Heaping Some values occur unexpectedly often. Discretized Only certain values are found, e.g. due to rounding. Implausible Values outside of plausible or likely range. 4.2 Numerical features of a single contiuous variables ggplot(some_df, aes(x1)) + geom_histogram(binwidth = 0.2, fill = &quot;pink&quot;, color = &quot;black&quot;) + theme_void() + theme(axis.line.x = element_line(color = &quot;black&quot;, size = 2)) A measure of central tendency, e.g. mean, median and mode. A measure of dispersion (also called variability or spread), e.g. variance, standard deviation and interquartile range. There are other measures, e.g. skewness and kurtosis that measures “tailedness,” but these are not as common as the measures of first two. The mean is also the first moment and variance, skewness and kurtosis are second, third, and fourth central moments. Significance tests or hypothesis tests: When testing for \\(H_0: \\mu = \\mu_0\\) vs. \\(H_1: \\mu \\neq \\mu_0\\) (often \\(\\mu_0 = 0\\)), the \\(t\\)-test is commonly used if the underlying data are believed to be normally distributed. 4.3 Outliers Outliers are observations that are significantly different from the majority. ] Outliers can occur by chance in almost all distributions, but could be indicative of a measurement error, a different population, or an issue with the sampling process. Outlying values of independent variables are referred to as high-leverage points, although this distinction is not particularly important when analysing a single continuous variable. 4.4 Closer look at the boxplot fn &lt;- quantile(mtcars$wt, c(0, 0.25, 0.5, 0.75, 1), type = 7) iqr &lt;- fn[4] - fn[2] ggplot(mtcars, aes(wt, &quot;&quot;)) + geom_boxplot(size = 1.4, width = 0.2, outlier.color = &quot;#006DAE&quot;, outlier.size = 3, outlier.fill = &quot;#006DAE&quot;) + geom_dotplot(binwidth = 0.1, fill = &quot;gray&quot;) + annotate(&quot;line&quot;, x = fn[c(2,4)], y = 1.3, size = 1.3, color = &quot;#C8008F&quot;) + annotate(&quot;segment&quot;, x = fn[c(2, 4, 3)], xend = fn[c(2,4, 3)], y = c(1.25, 1.25, 0.75), yend = c(1.35, 1.35, 0.9), size = 1.3, color = &quot;#C8008F&quot;) + annotate(&quot;text&quot;, x = c(mean(fn[c(2, 4)]), fn[3]), y = c(1.4, 0.7), label = c(&quot;IQR&quot;, &quot;median&quot;), size = 10, color = &quot;#C8008F&quot;) + # some reason vline didn&#39;t work annotate(&quot;segment&quot;, x = c(fn[4] + 1.5 * iqr, fn[2] - 1.5 * iqr), xend = c(fn[4] + 1.5 * iqr, fn[2] - 1.5 * iqr), y = -Inf, yend = Inf, linetype = &quot;dashed&quot;) + theme_void() Observations that are outside the range of lower to upper thresholds are referred at times as .monash-blueoutliers. Plotting boxplots for data from a skewed distribution will almost always show these “outliers” but these are not necessary outliers. Some definitions of outliers assume a symmetrical population distribution (e.g. in boxplots or observations a certain standard deviations away from the mean) and these definitions are ill-suited for asymmetrical distributions. 4.5 Robust statistics: measure of central tendency df &lt;- tibble(x = rnorm(200) + c(rep(0, each = 195), rep(10, 5))) ggplot(df, aes(x)) + geom_histogram() + geom_vline(xintercept = mean(df$x), color = &quot;#EE0220&quot;, size = 1.3) + geom_vline(xintercept = median(df$x), color = &quot;#746FB2&quot;, size = 1.3) + theme_void() ## `stat_bin()` using `bins = 30`. Pick better value with ## `binwidth`. Mean is a non-robust measure of location. Some robust measures of locations are: Median is the 50% quantile of the observations Trimmed mean is the sample mean after discarding observations at the tails. Winsorized mean is the sample mean after replacing observations at the tails with the minimum or maximum of the observations that remain. 4.6 Robust statistics: measure of dispersion Standard deviation or its square, **variance*, is a popular choice of measure of dispersion but is not robust to outliers. Standard deviation for sample \\(x_1, ..., x_n\\) is calculated as \\[\\sqrt{\\sum_{i=1}^n \\frac{(x_i - \\bar{x})^2}{n - 1}}\\] Interquartile range is the difference between 1st and 3rd quartile and is more robust measure of spread than above. Median absolute deviance (MAD) is also more robust and defined as \\[\\text{median}(|x_i - \\bar{x}|).\\] 4.7 Transformations Transformations to data are used as an attempt to stabilize the variance or make the data symmetrical. Log and square root transformations are popular. A range of \\(\\lambda\\) values for (one-parameter) Box-Cox transformation is sometimes used to test for optimal transformation: \\[y(\\lambda) = \\begin{cases}\\dfrac{(y^\\lambda - 1)}{\\lambda}\\\\ \\log(y)\\end{cases}\\] Children and midparents heights ggplot(df2, aes(height)) + geom_histogram(binwidth = 1) + facet_wrap(~ person, scale = &quot;free&quot;) + labs(x = &quot;Height (inches)&quot;, y = &quot;Frequency&quot;) ggplot(df2, aes(height)) + geom_histogram(binwidth = 1) + facet_grid(. ~ person) + labs(x = &quot;Height (inches)&quot;, y = &quot;Frequency&quot;) Midparent’s height is an average of the father’s height and 1.08 times the mother’s height. The data contains 205 parents and 928 children. galton %&gt;% arrange(parent, child) %&gt;% as_tibble() %&gt;% print(n = 3) ## # A tibble: 928 x 2 ## child parent ## &lt;dbl&gt; &lt;dbl&gt; ## 1 61.7 64 ## 2 63.2 64 ## 3 63.2 64 ## # … with 925 more rows The data included families of 1 to 15 children, so in the extreme case, one midparent data point is repeated 15 times in the data. The frequency of midparents heights therefore are over-represented with parents with large family size. ggplot(df2, aes(height)) + geom_histogram(binwidth = 1, aes(y = stat(density))) + facet_wrap(~ person) + labs(x = &quot;Height (inches)&quot;, y = &quot;Density&quot;) ggplot(df2, aes(height)) + geom_histogram(binwidth = 0.1, aes(y = stat(density))) + facet_wrap(~ person) + labs(x = &quot;Height (inches)&quot;, y = &quot;Density&quot;) Changing the bin width of histogram from 1 to 0.1, we can see the data have been rounded and hence some precision is lost in the data. The data confirms this with most children’s height recorded with “.2” at the end and most midparents heights recorded with “.5” at the end. df2sum &lt;- df2 %&gt;% group_by(person) %&gt;% summarise(med = median(height)) ggplot(df2, aes(height)) + geom_histogram(binwidth = 1) + facet_grid(person ~ ., as.table = FALSE) + geom_vline(data = df2sum, aes(xintercept = med), color = &quot;red&quot;, size = 2) + labs(x = &quot;Height (inches)&quot;, y = &quot;Frequency&quot;) ggplot(df2, aes(height, person)) + geom_boxplot() + labs(x = &quot;Height (inches)&quot;, y = &quot;&quot;) Aligning the histogram vertically makes it easier to compare the heights of children and midparents. The side-by-side boxplots makes it easy to see the variability of the heights of the midparents are smaller than the children. The smaller variability is expected because the midparents heights are average of two values. We can also see that the median height is larger for the midparents than children. You may think that the heights of children should be bimodal, one peak for male and the other peak for female. But that is not necessary the case as we’ll see next. Self-reported heights data(&quot;heights&quot;, package = &quot;dslabs&quot;) ggplot(heights, aes(height)) + geom_density(aes(fill = sex), size = 2) + scale_fill_discrete_qualitative() + labs(x = &quot;Height (inches)&quot;, y = &quot;Density&quot;) + theme(legend.position = c(0.2, 0.8)) ggplot(heights, aes(height)) + geom_density(fill = &quot;#027EB6&quot;, size = 2) + labs(x = &quot;Height (inches)&quot;, y = &quot;Density&quot;) You can see that drawing separate density plots for each sexes shows that the women are on average shorter than men. The bimodality is however not visible when the data are combined. Men’s heights ggplot(df4, aes(height)) + geom_histogram(binwidth = 1, aes(y = stat(density))) + facet_grid(status ~ .) + geom_density(color = &quot;red&quot;, size = 2) + labs(x = &quot;Height (inches)&quot;, y = &quot;Density&quot;) ggplot(df4, aes(sample = height)) + geom_qq_line(color = &quot;red&quot;, size = 2) + geom_qq() + facet_grid(. ~ status) + labs(x = &quot;Theoretical quantiles&quot;, y = &quot;Sample quantiles&quot;) ggplot(df4, aes(height, status)) + geom_boxplot() + labs(x = &quot;Height (inches)&quot;, y = &quot;&quot;) The height distribution of the son appears more normal than of the father looking at the density plot. Looking at the Q-Q plots, this however looks the other way around. The heights are recorded to five decimal places (e.g. 65.04851). It’s unlikely that the heights were measured to such high precision and rather that someone must have “jittered” the data (i.e. added some small random perturbation to the observation). Boston housing data ggplot(df5, aes(MEDV)) + geom_histogram(binwidth = 1, color = &quot;black&quot;, fill = &quot;#008A25&quot;) + labs(x = &quot;Median housing value (US$1000)&quot;, y = &quot;Frequency&quot;) Thre is a large frequency in the final bin. There is a decline in observations in the $40-49K range as well as dip in observations around $26K and $34K. The histogram is using a bin width of 1 unit and is left-open (or right-closed): (4.5, 5.5], (5.5, 6.5] … (49.5, 50.5]. Occasionally, whether it is left- or right-open can make a difference. ggplot(df5, aes(MEDV, y = &quot;&quot;)) + geom_boxplot(fill = &quot;#008A25&quot;) + labs(x = &quot;Median housing value (US$1000)&quot;, y = &quot;&quot;) + theme(axis.line.y = element_blank()) ggplot(df5, aes(MEDV, y = &quot;&quot;)) + geom_jitter() + labs(x = &quot;Median housing value (US$1000)&quot;, y = &quot;&quot;) + theme(axis.line.y = element_blank()) ggplot(df5, aes(MEDV)) + geom_density() + geom_rug() + labs(x = &quot;Median housing value (US$1000)&quot;, y = &quot;&quot;) + theme(axis.line.y = element_blank()) Density plots depend on the bandwidth chosen and more than often do not estimate well at boundary cases. There are various way to present features of the data using a plot and what works for one person, may not be as straightforward for another. Be prepared to do multiple plots. ggplot(df5, aes(PTRATIO)) + geom_histogram(fill = &quot;#9651A0&quot;, color = &quot;black&quot;, binwidth = 0.2) + labs(x = &quot;Pupil-teacher ratio by town&quot;, y = &quot;&quot;, title = &quot;Bin width = 0.2, Left-open&quot;) ggplot(df5, aes(PTRATIO)) + geom_histogram(fill = &quot;#9651A0&quot;, color = &quot;black&quot;, binwidth = 0.5) + labs(x = &quot;Pupil-teacher ratio by town&quot;, y = &quot;&quot;, title = &quot;Bin width = 0.5, Left-open&quot;) ggplot(df5, aes(PTRATIO)) + geom_histogram(fill = &quot;#9651A0&quot;, color = &quot;black&quot;, bin = 30) + labs(x = &quot;Pupil-teacher ratio by town&quot;, y = &quot;&quot;, title = &quot;Bin number = 30, Left-open&quot;) ## Warning: Ignoring unknown parameters: bin ## `stat_bin()` using `bins = 30`. Pick better value with ## `binwidth`. ggplot(df5, aes(PTRATIO)) + geom_histogram(fill = &quot;#9651A0&quot;, color = &quot;black&quot;, binwidth = 0.2, closed = &quot;left&quot;) + labs(x = &quot;Pupil-teacher ratio by town&quot;, y = &quot;&quot;, title = &quot;Bin width = 0.2, Right-open&quot;) ggplot(df5, aes(PTRATIO)) + geom_histogram(fill = &quot;#9651A0&quot;, color = &quot;black&quot;, binwidth = 0.5, closed = &quot;left&quot;) + labs(x = &quot;Pupil-teacher ratio by town&quot;, y = &quot;&quot;, title = &quot;Bin width = 0.5, Right-open&quot;) ggplot(df5, aes(PTRATIO)) + geom_histogram(fill = &quot;#9651A0&quot;, color = &quot;black&quot;, bin = 30, closed = &quot;left&quot;) + labs(x = &quot;Pupil-teacher ratio by town&quot;, y = &quot;&quot;, title = &quot;Bin number = 30, Right-open&quot;) ## Warning: Ignoring unknown parameters: bin ## `stat_bin()` using `bins = 30`. Pick better value with ## `binwidth`. ggplot(df5long, aes(value)) + geom_histogram() + facet_wrap( ~var, scale = &quot;free&quot;) + labs(x = &quot;&quot;, y = &quot;&quot;) + theme(axis.text = element_text(size = 12)) ## `stat_bin()` using `bins = 30`. Pick better value with ## `binwidth`. CRIM: per capita crime rate by town INDUS: proportion of non-retail business acres per town NOX: nitrogen oxides concentration (parts per 10 million) RM: average number of room per dwelling AGE: proportion of owner-occupied units built prior to 1940 DIS: weighted mean of distances to 5 Boston employment centres RAD: index of accessibility to radial highways TAX: full-value property tax rate per $10K PTRATIO: pupil-teacher ratio by town LSTAT: lower status of the population (%) MEDV: median value of owner-occupied homes in $1000s Movie length ggplot(movies, aes(length)) + geom_histogram() + labs(x = &quot;Length of movie (minutes)&quot;, y = &quot;Frequency&quot;) ## `stat_bin()` using `bins = 30`. Pick better value with ## `binwidth`. ggplot(movies, aes(length, y = &quot;&quot;)) + geom_boxplot() + labs(x = &quot;Length of movie (minutes)&quot;, y = &quot;&quot;) + theme(axis.line.y = element_blank()) Upon further exploration, you can find the two movies that are well over 16 hours long are: movies %&gt;% filter(length &gt; 1000) %&gt;% pull(title) %&gt;% cat(sep = &quot;\\n&quot;) ## Cure for Insomnia, The ## Four Stars ## Longest Most Meaningless Movie in the World, The We can restrict our attention to films under 3 hours: movies %&gt;% filter(length &lt; 180) %&gt;% ggplot(aes(length)) + geom_histogram(binwidth = 1, fill = &quot;#795549&quot;, color = &quot;black&quot;) + labs(x = &quot;Length of movie (minutes)&quot;, y = &quot;Frequency&quot;) "]]
